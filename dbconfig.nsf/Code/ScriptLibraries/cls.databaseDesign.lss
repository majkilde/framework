'++LotusScript Development Environment:2:5:(Options):0:74
%REM
**************************************************************************************************************************'
COPYRIGHT 2003-2007 by MAJKILDE Aps
**************************************************************************************************************************'
This library is programmed and owned by MAJKILDE Aps
Under the copyright laws, neither the documentation nor the software may be copied, photocopied, 
reproduced, translated, resold, or reduced to any electronic medium or machine-readable form, 
in whole or in part, without the prior written consent of MAJKILDE Aps, except in the manner described 
in the documentation or the applicable licensing agreement governing the use of the software.
**************************************************************************************************************************'
%ENDREM
Option Public
Option Declare
Use "cls.system"
Use "cls.utils"


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class DatabaseDesign As AbstractObject

'++LotusScript Development Environment:2:5:(Declarations):0:10
Public Class DatabaseDesign As AbstractObject
'##############################################################################################################################
	Private db As NotesDatabase
	
	Sub new( db As NotesDatabase ) 
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Set Me.db = db
	End Sub 'new
	
	Public Function hasRole( role As String ) As Integer
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim v As Variant
		v = Evaluate( |@isMember( "| & role & |"; @userroles) | )
		hasRole =  ( v( 0 ) = 1 )
	End Function 'hasRole
	
	Public Function getViews( ) As Variant
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim views As New Array( Null )
		Dim aliasName As String
		
		Forall view In db.views
			'Get the view alias
			If Isempty( view.Aliases ) Then
				aliasName = view.Name 
			Else
				aliasName = view.Aliases( Ubound( view.Aliases ))
			End If
		'Add view to list
			Call views.add( view.Name & "|" & aliasName )
		End Forall
		getViews = views.sort()
	End Function 'getViews
	
	Public Function getForms( ) As Variant	
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim forms As New Array( Null )
		Dim aliasName As String
		
		Forall form In db.forms
			'Get the forms alias
			If Isempty( form.Aliases ) Then
				aliasName = form.Name 
			Else
				aliasName = form.Aliases( Ubound( form.Aliases ))
			End If
		'Add form to list
			Call forms.add( form.Name & "|" & aliasName )
		End Forall
		getForms = forms.sort()
	End Function 'getForms
	
	Public Function getAgents( ) As Variant	
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim agents As New Array( Null )
		
		Forall agent In db.agents
			'Get the agents alias
			If Instr( agent.name, "|" ) > 0 Then
				Call agents.add( agent.name ) 
			Else
				Call agents.add( agent.name & "|" & agent.name )
			End If
		End Forall
		getAgents = agents.sort()
	End Function 'getAgents
	
	Public Function getRoles() As Variant
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim roles As New Array( db.acl.roles )
		Call roles.sort()
		getRoles = roles.elements()
	End Function 'getRoles
	
	Public Function getFields() As Variant
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim fieldNames As New Array( Null )
		
		Forall form In db.forms
			Call fieldNames.add( form.fields )	
		End Forall
		
		Call fieldNames.unique()
		Call fieldNames.sort()
		Call fieldNames.trim()
		
		getFields = fieldNames.elements()
	End Function 'getFields
	
	Public Function getImages() As Variant
	'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Dim notes As NotesNoteCollection
		Dim noteId As String
		Dim element As NotesDocument
		Dim result As New Array( Null )
		
		Set notes = db.CreateNoteCollection( False )
		notes.SelectImageResources = True
		Call notes.BuildCollection
		noteId = notes.GetFirstNoteId
		Do Until noteId = ""
			Set element = db.GetDocumentByID( noteid )
			
			Call result.add( element.GetItemValue( "$title" )( 0 ))
			
			noteId = notes.GetNextNoteId( noteid )
		Loop
		
		Call result.sort()
		getImages = result.elements()
	End Function
	
End Class 'AbstractDatabase